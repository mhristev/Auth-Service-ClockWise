spring.application.name=authService

# Server configuration
server.port=8081

# Database Configuration
spring.r2dbc.url=r2dbc:postgresql://auth-postgres:5432/auth_db
spring.r2dbc.username=postgres
spring.r2dbc.password=password

# Flyway Configuration (JDBC)
spring.flyway.url=jdbc:postgresql://auth-postgres:5432/auth_db
spring.flyway.user=postgres
spring.flyway.password=password
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# JWT/OAuth2 Resource Server Configuration
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/clockwise/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/clockwise

# Keycloak Configuration
keycloak.server-url=http://keycloak:8080
keycloak.realm=clockwise
keycloak.client-id=auth-service
keycloak.client-secret=v8Sac9YQKLm0ZrGiS9JgwLRMa4Q0pF7c

# Keycloak Admin Configuration
keycloak.admin.client-id=admin-cli
keycloak.admin.username=admin
keycloak.admin.password=admin

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id=auth-service-group
spring.kafka.consumer.auto-offset-reset=earliest

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always
management.metrics.tags.application=auth-service
management.metrics.tags.service=auth-service
management.metrics.export.prometheus.enabled=true

# Logging
logging.level.org.springframework.data.r2dbc=INFO
logging.level.io.r2dbc=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level [%thread] %logger{36} - %msg%n 