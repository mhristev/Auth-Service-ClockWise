spring:
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8180/auth/realms/clockwise
            user-name-attribute: preferred_username
            authorization-uri: http://localhost:8180/auth/realms/clockwise/protocol/openid-connect/auth
            token-uri: http://localhost:8180/auth/realms/clockwise/protocol/openid-connect/token
            jwk-set-uri: http://localhost:8180/auth/realms/clockwise/protocol/openid-connect/certs
            user-info-uri: http://localhost:8180/auth/realms/clockwise/protocol/openid-connect/userinfo
        registration:
          keycloak:
            client-id: auth-service
            client-secret: auth-service-secret
            authorization-grant-type: password
            scope:
              - openid
              - profile
              - email
              - roles
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/auth/realms/clockwise
          jwk-set-uri: http://localhost:8180/auth/realms/clockwise/protocol/openid-connect/certs
  
  application:
    name: auth-service
  
  r2dbc:
    url: r2dbc:postgresql://localhost:5433/auth_db
    username: postgres
    password: password
    
  flyway:
    url: jdbc:postgresql://localhost:5433/auth_db
    user: postgres
    password: password
    locations: classpath:db/migration
    baseline-on-migrate: true
    
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: 8081

# Keycloak Configuration
keycloak:
  server-url: http://localhost:8180/auth
  realm: clockwise
  admin:
    client-id: admin-cli
    username: admin
    password: admin

# Kafka Topics
kafka:
  topic:
    user-registration: user-registration-events

# Logging
logging:
  level:
    com.clockwise.authService: DEBUG
    org.springframework.security: DEBUG